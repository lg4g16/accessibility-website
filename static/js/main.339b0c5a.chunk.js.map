{"version":3,"sources":["Images/EvernoteLogo.png","Images/TrelloLogo.png","Images/EvernoteLogoDark.png","Images/WAVE.png","Images/CSS.png","Images/XHTML.png","Images/ATBar.png","Images/Tab.png","serviceWorker.js","index.js","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","render","useState","darkMode","setDarkMode","largeText","setLargeText","dialogOpen","setDialogOpen","dialogOpen1","setDialogOpen1","modalOpen1","setModalOpen1","modalOpen2","setModalOpen2","modalOpen3","setModalOpen3","modalOpen4","setModalOpen4","modalOpen5","setModalOpen5","modalOpen6","setModalOpen6","modalOpen7","setModalOpen7","modalOpen8","setModalOpen8","introRef","useRef","evernoteRef","trelloRef","siteRef","settingsRef","scrollTo","ref","current","offsetTop","className","AppBar","position","Toolbar","Typography","variant","Button","color","onClick","style","minHeight","fontSize","marginBottom","display","flexDirection","justifyContent","src","EvernoteWebDark","EvernoteWeb","width","alt","TrelloDesktop","borderTop","paddingTop","marginTop","Dialog","open","keepMounted","onClose","DialogTitle","DialogContent","DialogActions","borderRight","padding","paddingBottom","CSS","XHTML","WAVE","Tab","ATBar","href","target","download","marginLeft","marginRight","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.339b0c5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EvernoteLogo.fecd1d36.png\";","module.exports = __webpack_public_path__ + \"static/media/TrelloLogo.98e7bb92.png\";","module.exports = __webpack_public_path__ + \"static/media/EvernoteLogoDark.1a4df27f.png\";","module.exports = __webpack_public_path__ + \"static/media/WAVE.ed3dcd0e.png\";","module.exports = __webpack_public_path__ + \"static/media/CSS.1ef0563d.png\";","module.exports = __webpack_public_path__ + \"static/media/XHTML.cf7a1f7c.png\";","module.exports = __webpack_public_path__ + \"static/media/ATBar.77f83660.png\";","module.exports = __webpack_public_path__ + \"static/media/Tab.15964ded.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components'\nimport './App.css';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport EvernoteWeb from './Images/EvernoteLogo.png'\nimport TrelloDesktop from './Images/TrelloLogo.png'\nimport EvernoteWebDark from './Images/EvernoteLogoDark.png'\nimport WAVE from './Images/WAVE.png'\nimport CSS from './Images/CSS.png'\nimport XHTML from './Images/XHTML.png'\nimport ATBar from './Images/ATBar.png'\nimport Tab from './Images/Tab.png'\n\n\nexport default () => {\n  const [darkMode, setDarkMode] = useState(false)\n  const [largeText, setLargeText] = useState(false)\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [dialogOpen1, setDialogOpen1] = useState(false)\n  const [modalOpen1, setModalOpen1] = useState(false);\n  const [modalOpen2, setModalOpen2] = useState(false);\n  const [modalOpen3, setModalOpen3] = useState(false);\n  const [modalOpen4, setModalOpen4] = useState(false);\n  const [modalOpen5, setModalOpen5] = useState(false);\n  const [modalOpen6, setModalOpen6] = useState(false);\n  const [modalOpen7, setModalOpen7] = useState(false);\n  const [modalOpen8, setModalOpen8] = useState(false);\n  const introRef = useRef()\n  const evernoteRef = useRef()\n  const trelloRef = useRef()\n  const siteRef = useRef()\n  const settingsRef = useRef()\n\n  const scrollTo = (ref) => window.scrollTo(0, ref.current.offsetTop - 50);\n\n\n  return (\n    <div className={darkMode ? 'app-dark' : 'app-light'}>\n      <AppBar position=\"fixed\" className='navbar'>\n        <Toolbar>\n          <Typography variant=\"h6\" className='title'>\n            Comp6219 Website\n          </Typography>\n          <Button color=\"inherit\" className={darkMode ? 'toggle-dark' : 'toggle-light'} onClick={() => scrollTo(introRef)}>Introduction</Button>\n          <Button color=\"inherit\" className={darkMode ? 'toggle-dark' : 'toggle-light'} onClick={() => scrollTo(evernoteRef)}>Evernote</Button>\n          <Button color=\"inherit\" className={darkMode ? 'toggle-dark' : 'toggle-light'} onClick={() => scrollTo(trelloRef)}>Trello</Button>\n          <Button color=\"inherit\" className={darkMode ? 'toggle-dark' : 'toggle-light'} onClick={() => scrollTo(siteRef)}>This Site</Button>\n          <Button color=\"inherit\" className={darkMode ? 'toggle-dark' : 'toggle-light'} onClick={() => scrollTo(settingsRef)}>Settings and Links</Button>\n        </Toolbar>\n      </AppBar>\n\n      <div style={{minHeight: \"64px\"}}/>\n      <div className={darkMode ? 'section-dark' : 'section-light'} style={{fontSize: largeText ? '30px': '20px'}} ref={introRef}>\n        <h2>Liberty Gamble - COMP6219 Online Report Summary</h2>\n        <p style={{marginBottom: '50px'}}>\n          This website summarises the report completed for COMP6219 Designing Usable and Accessible Technologies. The study will focus on\n          one web application and one software application: \n        </p>\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <Button className='logo' onClick={() => scrollTo(evernoteRef)}>\n            <img src={darkMode ? EvernoteWebDark : EvernoteWeb} style={{width: '20vw'}} alt='Evernote Logo - link to analysis of Evernote Application'/>\n          </Button>\n          <Button className='logo' onClick={() => scrollTo(trelloRef)}> \n            <img src={TrelloDesktop} style={{width: '20vw'}} alt='Trello Logo - link to analysis of Trello Application'/>\n          </Button>\n        </div>\n        \n        <p style={{borderTop:'1px lightgrey solid', paddingTop: '20px', marginTop: '50px'}}>Accessibility and Usability Evaluation Tools and Techniques:</p>\n\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <Button className='tool-button' onClick={() => setModalOpen1(true)} style={{fontSize: largeText ? '18px': '14px'}}>Nielsen's Usability</Button>\n          <Button className='tool-button' onClick={() => setModalOpen2(true)} style={{fontSize: largeText ? '18px': '14px'}}>WGAG 2.1</Button>\n          <Button className='tool-button' onClick={() => setModalOpen3(true)} style={{fontSize: largeText ? '18px': '14px'}}>WAVE</Button>\n          <Button className='tool-button' onClick={() => setModalOpen4(true)} style={{fontSize: largeText ? '18px': '14px'}}>ChromeVox</Button>\n          <Button className='tool-button' onClick={() => setModalOpen5(true)} style={{fontSize: largeText ? '18px': '14px'}}>Colour Contrast Analyser</Button>\n          <Button className='tool-button' onClick={() => setModalOpen6(true)} style={{fontSize: largeText ? '18px': '14px'}}>ATBar</Button>\n          <Button className='tool-button' onClick={() => setModalOpen7(true)} style={{fontSize: largeText ? '18px': '14px'}}>NVDA</Button>\n          <Button className='tool-button' onClick={() => setModalOpen8(true)} style={{fontSize: largeText ? '18px': '14px'}}>Windows Narrator</Button>\n        </div>\n\n\n        <Dialog open={modalOpen1} keepMounted onClose={() => setModalOpen1(false)}>\n          <DialogTitle>Nielsen's Usability</DialogTitle>\n          <DialogContent>\n          <p>Both Evernote and Trello were tested against 2 of Nielsen's Usability Measures</p>\n          <p>The two measures chosen were the usability definition - learnability,\n            memorability, efficiency, errors and satisfaction; and the 10 usability heuristics\n          </p>\n          <p> The book for the defition can be found at this link: https://books.google.co.uk/books?hl=en&lr=&id=DBOowF7LqIQC&oi=fnd&pg=PP1&dq=jakob+nielsen+usability+definition+paper&ots=Bl7aTVGTxV&sig=nGZ1-Zsaec8Ns2CRNmCI0y_HbIs#v=onepage&q&f=false</p>\n          <p> The paper for the 10 usability heuristics can be found at this link: http://cs.ashoka.edu.in/cs102/papers/Nielsen94-Enhancing-Heuristics.pdf</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen1(false)} >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen2} keepMounted onClose={() => setModalOpen2(false)} >\n          <DialogTitle>WCAG 2.1</DialogTitle>\n          <DialogContent>\n            <p>WCAG 2.1 was used to evaluate Evernote via the Web2Access site testing values. </p>\n            <p>The tests can be found through this link: https://web2access.org.uk/platforms/website/versions/2/tests </p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen2(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen3} keepMounted onClose={() => setModalOpen3(false)} >\n          <DialogTitle> WAVE</DialogTitle>\n          <DialogContent>\n            <p>WAVE was used to find specific areas of website errors and contrast errors in Evernote</p>\n            <p>The WAVE tool can be found through this link: https://wave.webaim.org/</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen3(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen4} keepMounted onClose={() => setModalOpen4(false)} >\n          <DialogTitle>ChromeVox </DialogTitle>\n          <DialogContent>\n            <p>ChromeVox is Chrome's extension screen reader used to test Evernote</p>\n            <p>The following assessment was made of the tool: </p>\n            <p>ChromeVox is the Google Chrome Extension screen reader. It has a small selection of languages and several voices to interpret English. ChromeVox allows the user to change the keyboard shortcuts for screen reader navigation and add additional command shortcuts. However, it does not allow the user to turn screen reading off and muting the volume will also mute other audio.</p>\n            <p>The Chrome Extension page can be found at this link: https://chrome.google.com/webstore/detail/chromevox-classic-extensi/kgejglhpjiefppelpmljglcjbhoiplfn</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen4(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen5} keepMounted onClose={() => setModalOpen5(false)} >\n          <DialogTitle>Colour Contrast Analyser </DialogTitle>\n          <DialogContent>\n            <p>A Colour Contrast Analyser was used to test the contrast for areas within Trello</p>\n            <p>The download for this application can be found at this link: https://sourceforge.net/projects/portableapps/files/Colour%20Contrast%20Analyser%20Portable/</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen5(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen6} keepMounted onClose={() => setModalOpen6(false)} >\n          <DialogTitle> ATBar </DialogTitle>\n          <DialogContent>\n            <p>ATBar was used to check whether components can be changed to help users with visual or cognitive impairments such as dyslexia. The features employed were – font change, change styles, colour overlay and text size. Text to speech was used but this was simply for highlighting text whereas the others changed the visual experience and structure of the page. </p>\n            <p>The following assessment of the application was made:</p>\n            <p>The overlay feature allowed for a pleasant reading experience but the colours were slightly too intense. The font changing feature had a good selection of fonts potentially helping those with dyslexia, ATBar could benefit from demos of the font in the selection drop down rather than just featuring the font name. The same applies for font colours, page style and changing the style of the ATBar. Lastly, the change styles feature has sub menus to the previously stated font colours, page style and ATBar style. However, these have no ‘return’ button and to switch sub-menus, the user must close and open the whole selection. This is slow for all users, but could cause issues particularly for users who have limited input capacity. </p>\n            <p>The download page for this extension can be found at this link: https://www.atbar.org/</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen6(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen7} keepMounted onClose={() => setModalOpen7(false)} >\n          <DialogTitle>NVDA</DialogTitle>\n          <DialogContent>\n            <p>NVDA was used as a screen-reader for the testing of Trello</p>\n            <p>The following assessment of the application was made: </p>\n            <p>NVDA has a small number of options, not giving the user too much freedom. It does give the user the option to either turn NVDA on or automatic start-up which is useful for shared computers which have users of different abilities. </p>\n            <p>The download page for this application can be found at this link: https://www.nvaccess.org/download/</p>\n          \n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen7(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog open={modalOpen8} keepMounted onClose={() => setModalOpen8(false)} >\n          <DialogTitle>Windows Narrator</DialogTitle>\n          <DialogContent>\n            <p>Windows Narrator was used to test Trello</p>\n            <p>The following assessment of the tool was made: </p>\n            <p>The windows narrator has a good selection of options and a user guide. It is easy to turn on and off and allows the user to change the level of detail at which several types of components are described. </p>\n            <p>Windows Narrator can be turned on via Windows Settings</p>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setModalOpen8(false)} color=\"rgb(0, 57, 75)\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n\n\n\n\n      </div>\n      <div className={darkMode ? 'section-dark' : 'section-light'} style={{fontSize: largeText ? '30px': '20px'}} ref={evernoteRef}>\n        <h2>Evernote</h2>\n        <p style={{marginBottom: '30px'}}>Evernote Web is an online note taking application. Notes can be organised into notebooks, tagged for easy categorisation, and styled with standard text editing functions</p>\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <div style={{width: '25vw', borderRight:'1px lightgrey solid', padding: '20px'}}>\n            <h3>The Good</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Learnability</h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Evernote has a large amount of documentation on using their application, both in learning and inspiration for more complex use. The icons seen throughout match standard text editing styles, helping the user to recognise standard functions. The application has a slide in/out side menu bar, allowing the user to learn the icons associated with each screen, and then hide it for the use of a larger text editing screen.</p>\n          </div>\n          <div style={{width: '25vw', borderRight:'1px lightgrey solid', padding: '20px'}}>\n            <h3>The Bad</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Browser Compatibility</h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Evernote only functions in the newest versions of Chrome, Safari, Firefox and Opera. It cannot be accessed by Internet Explorer or Microsoft Edge, an old version is available which has a far less pleasing style and fewer features. This older version can also be reached on the 'new' browsers, it is then very difficult to return to the updated style.</p>\n          </div>\n          <div style={{width: '25vw', padding: '20px'}}>\n            <h3>The Ugly</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Keyboard Access </h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Evernote's keyboard access is lacking in all areas. There are several modal screens which can't be exited, and only a few areas on the screen can be accessed. There is also difficulty in signing up using keyboard access, some of the options, such as 'sign in with google', are unreachable. There are no keyboard shortcuts available, which are available in their downloadable application. </p>\n          </div>\n        </div>\n      </div>\n      <div className={darkMode ? 'section-dark' : 'section-light'} style={{fontSize: largeText ? '30px': '20px'}} ref={trelloRef}>\n      <h2>Trello</h2>\n      <p style={{marginBottom: '30px'}}>Trello for Windows is a downloadable productivity application which stores boards of ideas and tasks. It features sub-lists, deadline reminders and task categorisation to keep a track of any project</p>\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <div style={{width: '25vw', borderRight:'1px lightgrey solid', padding: '20px'}}>\n            <h3>The Good</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Flexibillity </h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Trello has excellent flexibility. Every board has several layers of organisation and can be styled and linked completely as the user wishes. Trello even features an automated helper tool called 'Butler' which can set up repeating tasks or lists, completing a  \n            <i> 'When you do this, I'll do that'</i> feature, and can suggest tasks based on the users activity</p>\n\n          </div>\n          <div style={{width: '25vw', borderRight:'1px lightgrey solid',padding: '20px'}}>\n            <h3>The Bad</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Contrast Levels </h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Trello automatically sets the colour of board title text based on the selected background, which often provided ineffective contrast levels, particularly for mid-level colours. The task cards background and foreground colours do not change, but still have unacceptable contrast levels between their shades of grey at the font size provided </p>\n          </div>\n          <div style={{width: '25vw', padding: '20px'}}>\n            <h3>The Ugly</h3>\n            <h4 style={{marginBottom: '0px', paddingBottom: '0px'}}>Windows Narrator</h4>\n            <p style={{marginTop: '8px', paddingTop: '0px'}}>Trello has no compatability with the windows narrator even through it is advertised as Trello for Windows, the only readable attribute was the name of the application. It was accessible by the NVDA screen reader, possibly meaning there was some incompatabillity in the styles of labelling components</p>\n\n          </div>\n        </div>\n      </div>\n      <div className={darkMode ? 'section-dark' : 'section-light'} style={{fontSize: largeText ? '30px': '20px'}} ref={siteRef}>\n        <h2>This Site</h2>\n\n        <h3>Usability</h3>\n        <p>This site was designed with usability in mind. Simplicity was the first priority, a single scrolling page helps users who struggle with navigation. There is 2 functions which help with both usability and\n          accessibility: large text mode and dark mode. \n          The site uses a minimalistic design to keep the focus on the content. \n        </p>\n\n        <h3>CSS validation </h3>\n        <p>The CSS test found no errors for this site</p>\n        <img src={CSS} alt='CSS Validator Website test result showing no errors' style={{width: '40vw'}}/>\n\n        <h3>XHTML validation </h3>\n        <p>The XHTML test found no errors for this site</p>\n        <img src={XHTML} alt='HTML Validator Website test result showing no errors' style={{width: '40vw'}}/>\n\n        <h3>WAVE validation</h3>\n        <p>The WAVE assessment found no structural or contrast errors and functioned successfully with the 'turn styles off' option. </p>\n        <img src={WAVE} alt='WAVE Assessment result showing no errors, several structural features and ARIA labels ' style={{width: '50vw'}}/>\n\n        <h3>Tab Access </h3>\n        <p>The site has full tab access with a clear indication of which area was selected. Modal screens could be opened and closed using the tab key.</p>\n        <img src={Tab} alt='Demo of the site showing the style of an area which has been tabbed into' style={{}}/>\n\n        <h3>ATBar </h3>\n        <p>ATBar was used to test the text size and colour changing functions, text to speech and colour overlay. All of the site complied with the change settings and maintained its structural integrity with larger text</p>\n        <img src={ATBar} alt='Demo of the site with styles changed using ATBar showing full compliance' style={{}}/>\n\n        <h3>Screen Reader  </h3>\n        <p>NVDA was used to test the screen reader functionality, all areas of the site could be read including modal screens</p>\n\n        <h3>Browser Compatibility </h3>\n        <p>This site was tested using BrowserStack compatibility testing tool, it ran successfully on all available browser options </p>\n      </div>\n\n      <div className={darkMode ? 'settings-dark' : 'settings-light'} style={{fontSize: largeText ? '30px': '20px'}} ref={settingsRef}>\n        <h2>Settings and Links</h2>\n\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <div style={{width: '40vw', padding: '20px'}}>\n            <Button color=\"inherit\" className='tool-button' onClick={() => setLargeText(!largeText)} style={{fontSize: largeText ? '18px': '14px'}}>Large Text Mode</Button>\n            <Button color=\"inherit\" className='tool-button' onClick={() => setDarkMode(!darkMode)} style={{fontSize: largeText ? '18px': '14px'}}>Toggle Dark Mode</Button>\n          </div>\n\n        </div>\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center'}}>\n          <Button color=\"inherit\" className='tool-button' style={{fontSize: largeText ? '18px': '14px'}} href='https://www.netflix.com/browse'  target=\"_blank\">Link to slidewiki presentation</Button>\n          <Button color=\"inherit\" className='tool-button' style={{fontSize: largeText ? '18px': '14px'}} href='./Documents/Report.docx' download=\"Report.docx\">Download whole report - Accessible Word Document</Button>\n          <Button color=\"inherit\" className='tool-button' style={{fontSize: largeText ? '18px': '14px'}} href='./Documents/Report.pdf' download=\"Report.pdf\">Download whole report - PDF</Button>\n        </div>\n      </div>\n\n      <div className={darkMode ? 'footer-dark' : 'footer-light'} style={{fontSize: largeText ? '30px': '20px', marginLeft: '-150px', marginRight: '-150px'}}>\n        <h1>Footer</h1>\n        <p>Liberty Gamble 2020. All rights reserved</p>\n        <p>Designed using React and MaterialUI Components</p>\n        <p>For more information - Email lg4g16@soton.ac.uk</p>\n        <Button className='tool-button' onClick={() => setDialogOpen(true)}>Terms of service</Button>\n        <Button className='tool-button' onClick={() => scrollTo(introRef)}>Scroll to top</Button>\n        <Button className='tool-button' onClick={() => setDialogOpen1(true)}>Accessibility Statement</Button>\n      </div>\n      <Dialog open={dialogOpen} keepMounted onClose={() => setDialogOpen(false)} >\n        <DialogTitle>Terms of service</DialogTitle>\n        <DialogContent>\n          <p>Welcome to the COMP6219 Website</p>\n          <p>The content of this page is subject to change at any time without prior notice</p>\n          <p>The site contains links to external websites. This site holds no responsibility for content or practice of these external sites </p>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={dialogOpen1} keepMounted onClose={() => setDialogOpen1(false)} >\n        <DialogTitle><h3>Accessibility Statement for COMP6219 Website</h3></DialogTitle>\n        <DialogContent>\n          <p>Liberty Gamble, University of Southampton is committed to ensuring digital accessibility for people with disabilities. We are continually improving the user experience for everyone, and applying the relevant accessibility standards.</p>\n          <h4>Conformance Status </h4>\n          <p>The Web Content Accessibility Guidelines (WCAG) defines requirements for designers and developers to improve accessibility for people with disabilities. It defines three levels of conformance: Level A, Level AA, and Level AAA. COMP6219 Website is fully conformant with WCAG 2.1 level AA. Fully conformant means that the content fully conforms to the accessibility standard without any exceptions.</p>\n          <p>This statement was created on 8 January 2020 using the W3C Accessibility Statement Generator Tool.</p>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen1(false)} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n"],"sourceRoot":""}